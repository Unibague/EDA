name: Deploy Frontend EDA

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.14.0'

    - name: Install OpenConnect
      run: sudo apt-get install -y openconnect

    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    - name: Connect to VPN
      run: |
        echo "${{ secrets.VPN_PASSWORD }}" | sudo openconnect \
          --protocol=gp \
          --user="${{ secrets.VPN_USER }}" \
          --passwd-on-stdin \
          ${{ secrets.VPN_HOST }} \
          --servercert pin-sha256:e+mVC0ZMBRpVuuepldqN0mN6RvimRBTzlm5zZbGbcmA= -b
      env:
        VPN_PASSWORD: ${{ secrets.VPN_PASSWORD }}
        VPN_USER: ${{ secrets.VPN_USER }}
        VPN_HOST: ${{ secrets.VPN_HOST }}
    


    - name: Verify VPN connection
      run: ip a

    - name: List network routes
      run: ip route

    - name: Test internal connectivity with SSH
      run: |
        sshpass -p "${{ secrets.INTERNAL_SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.INTERNAL_USER }}@${{ secrets.INTERNAL_RESOURCE_IP }} 'echo "SSH connection successful"'
        
    - name: Clonar repositorio en el servidor remoto
      run: |
          sshpass -p "${{ secrets.INTERNAL_SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.INTERNAL_USER }}@${{ secrets.INTERNAL_RESOURCE_IP }} '
            cd /var/www/EDA || exit;
      
          
            git config --global --add safe.directory /var/www/EDA;
      
            
            git stash;
      
            
            git pull --rebase;
      
            
            git stash drop'
      
      
    - name: Build project on remote server
      run: |
              sshpass -p "${{ secrets.INTERNAL_SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.INTERNAL_USER }}@${{ secrets.INTERNAL_RESOURCE_IP }} '
                cd /var/www/EDA;
                if [ -f package.json ]; then
                  npm install;
                  npm run production || echo "Build failed";
                else
                  echo "Error: package.json not found in /var/www/EDA"
                  exit 1;
                fi'
          